LucidWorks for Lucene/Solr 3.2.0_01, by Lucid Imagination

LucidWorks for Lucene/Solr is a commercially supported distribution of
Apache Lucene/Solr.  This release notes document is shared by the
LucidWorks for Lucene and Lucidworks for Solr distributions
and some listed changes will only apply to LucidWorks for Solr.

The full source code of this release can be found at
https://github.com/lucidimagination/lucene-solr/tree/lucene_solr_3_2

Lucene and Solr are trademarks of the Apache Software Foundation.

=== CHANGES ===
LucidWorks for Lucene/Solr 3.2.0_01 has the following changes compared
to Apache Lucene/Solr 3.2.0

* LUCENE-152: Add KStem (light stemmer for English).
   (Yonik Seeley via Robert Muir)

* SOLR-2567: Solr now defaults to TieredMergePolicy. 
  See http://s.apache.org/merging for more information.  (rmuir)

* SOLR-2579: UIMAUpdateRequestProcessor ignore error fails if text.length() < 100.
  (Elmer Garduno via koji)

* SOLR-2462: Fix extremely high memory usage problems with spellcheck.collate.
  Separately, an additional spellcheck.maxCollationEvaluations (default=10000)
  parameter is added to avoid excessive CPU time in extreme cases (e.g. long
  queries with many misspelled words).  (James Dyer via rmuir)

* LUCENE-3147,LUCENE-3152: Fixed open file handles leaks in many places in the
  code. Now MockDirectoryWrapper (in test-framework) tracks all open files,
  including locks, and fails if the test fails to release all of them.
  (Mike McCandless, Robert Muir, Shai Erera, Simon Willnauer)

* LUCENE-3102: CachingCollector.replay was failing to call setScorer
  per-segment (Martijn van Groningen via Mike McCandless)

* LUCENE-3183: Fix rare corner case where seeking to empty term
  (field="", term="") with terms index interval 1 could hit
  ArrayIndexOutOfBoundsException (selckin, Robert Muir, Mike
  McCandless)

* LUCENE-3185: Fix bug in NRTCachingDirectory.deleteFile that would
  always throw exception and sometimes fail to actually delete the
  file.  (Mike McCandless)

* LUCENE-3182: fix corruption case, when one thread is calling 
  IW.addIndices(IR...) and another thread calls IW.rollback()
 (Mike McCandless)


